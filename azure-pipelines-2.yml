# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: JFrogGradle@1
  inputs:
    gradleBuildFile: 'build.gradle'
    tasks: 'artifactoryPublish'
    artifactoryResolverService: 'arti'
    sourceRepo: 'sri-dines-gradle-dev'
    artifactoryDeployerService: 'arti'
    targetRepo: 'sri-dines-gradle-dev'
    useWrapper: true
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'

- task: JFrogPublishBuildInfo@1
  inputs:
      artifactoryConnection: 'arti'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
  
# - task: Gradle@2
#   inputs:
#     workingDirectory: ''
#     gradleWrapperFile: 'gradlew'
#     gradleOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/TEST-*.xml'
#     tasks: 'build'
